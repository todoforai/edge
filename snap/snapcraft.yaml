name: todoforai-edge
title: TodoForAI Edge
base: core22
version: '0.11.3'
summary: TodoForAI Edge client for file synchronization and shell command execution
description: |
  TodoForAI Edge is a client application that connects to the TodoForAI service.
  It enables file synchronization, editing, creation, and execution of shell commands
  to enhance developer productivity with AI assistance.

grade: stable
confinement: strict

layout:
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/webkit2gtk-4.1:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/webkit2gtk-4.1

apps:
  todoforai-edge:
    command: usr/bin/todoforai-edge
    desktop: usr/share/applications/todoforai-edge.desktop
    extensions: [gnome]
    plugs:
      - network
      - home
      - removable-media
      - ssh-keys
      - ssh-public-keys
      - system-files
      - process-control
      - desktop
      - desktop-legacy
      - wayland
      - x11

package-repositories:
  - type: apt
    components: [main]
    suites: [noble]
    key-id: 78E1918602959B9C59103100F1831DDAFC42E99D
    url: http://ppa.launchpad.net/snappy-dev/snapcraft-daily/ubuntu

parts:
  build-app:
    plugin: dump
    build-snaps:
      - node/20/stable
      - rustup/latest/stable
    build-packages:
      - libwebkit2gtk-4.1-dev
      - build-essential
      - curl
      - wget
      - file
      - libxdo-dev
      - libssl-dev
      - libayatana-appindicator3-dev
      - librsvg2-dev
      - dpkg
      - python3
      - python3-pip
    stage-packages:
      - libwebkit2gtk-4.1-0
      - libayatana-appindicator3-1
      - python3
      - python3-pip
    source: .
    override-build: |
      set -eu
      
      # Configure Rust toolchain
      rustup default stable
      
      # Install Python dependencies
      python3 -m pip install --upgrade pip
      pip install -r requirements.txt
      pip install . --prefix=$SNAPCRAFT_PART_INSTALL/usr
      
      # Install PyInstaller
      pip install PyInstaller
      
      # Build sidecar using make (simpler approach)
      make build-sidecar || {
        echo "make build-sidecar failed, trying direct PyInstaller approach..."
        # Fallback: direct PyInstaller command
        python3 -m PyInstaller --onefile --name todoforai-edge-sidecar \
          --hidden-import todoforai_edge \
          --hidden-import websockets \
          --hidden-import asyncio \
          edge_frontend/src-tauri/resources/python/ws_sidecar.py
      }
      
      # Copy sidecar using make
      make copy-sidecar || {
        echo "make copy-sidecar failed, copying manually..."
        mkdir -p edge_frontend/src-tauri/binaries
        if [ -f "dist/todoforai-edge-sidecar" ]; then
          cp dist/todoforai-edge-sidecar edge_frontend/src-tauri/binaries/todoforai-edge-sidecar-x86_64-unknown-linux-gnu
          chmod +x edge_frontend/src-tauri/binaries/todoforai-edge-sidecar-x86_64-unknown-linux-gnu
        fi
      }
      
      cd edge_frontend
      npm install
      npm run tauri build -- --bundles deb
      cd ..
      
      # Find the latest .deb file and extract it
      DEB_FILE=$(find edge_frontend/src-tauri/target/release/bundle/deb/ -name "*.deb" | sort -V | tail -1)
      echo "Found .deb file: $DEB_FILE"
      
      # Debug: show what's in the .deb file
      echo "=== Contents of .deb file ==="
      dpkg -c "$DEB_FILE"
      
      # Extract the .deb file
      dpkg -x "$DEB_FILE" $SNAPCRAFT_PART_INSTALL/
      
      # Fix binary naming - create symlink from todoforai_edge to todoforai-edge
      cd $SNAPCRAFT_PART_INSTALL/usr/bin/
      if [ -f "todoforai_edge" ]; then
        ln -sf todoforai_edge todoforai-edge
        echo "Created symlink: todoforai_edge -> todoforai-edge"
      fi
      cd -
      
      # Remove conflicting Python script in /usr/local/bin if it exists
      if [ -f "$SNAPCRAFT_PART_INSTALL/usr/local/bin/todoforai-edge" ]; then
        rm "$SNAPCRAFT_PART_INSTALL/usr/local/bin/todoforai-edge"
        echo "Removed conflicting Python script from /usr/local/bin/"
      fi
      
      # Fix the desktop file
      DESKTOP_FILE="$SNAPCRAFT_PART_INSTALL/usr/share/applications/todoforai-edge.desktop"
      if [ -f "$DESKTOP_FILE" ]; then
        echo "=== Original desktop file ==="
        cat "$DESKTOP_FILE"
        
        # Update Exec to use the correct binary name and fix icon path
        sed -i -e "s|Exec=todoforai_edge|Exec=todoforai-edge|g" "$DESKTOP_FILE"
        sed -i -e "s|Icon=todoforai_edge|Icon=todoforai-edge|g" "$DESKTOP_FILE"
        
        echo "=== Updated desktop file ==="
        cat "$DESKTOP_FILE"
      else
        echo "Desktop file not found at $DESKTOP_FILE"
      fi
      
      # Create icon symlink to fix the icon warning
      ICON_DIR="$SNAPCRAFT_PART_INSTALL/usr/share/icons/hicolor/128x128/apps"
      if [ -f "$ICON_DIR/todoforai_edge.png" ]; then
        ln -sf todoforai_edge.png "$ICON_DIR/todoforai-edge.png"
        echo "Created icon symlink: todoforai_edge.png -> todoforai-edge.png"
      fi
      
      # Debug: show what was extracted and fixed
      echo "=== Final binary files ==="
      find $SNAPCRAFT_PART_INSTALL/ -name "*todoforai*" -type f -o -name "*todoforai*" -type l
      
      echo "=== Verifying binary symlink ==="
      ls -la $SNAPCRAFT_PART_INSTALL/usr/bin/todoforai*